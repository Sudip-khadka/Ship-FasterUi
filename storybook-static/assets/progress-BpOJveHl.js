import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{r as f}from"./index-DUAV1Q2A.js";import{c as y,P as v}from"./index-BBSvTbSE.js";import{c as p}from"./utils-CiMRq3MP.js";var u="Progress",d=100,[I,L]=y(u),[_,E]=I(u),g=f.forwardRef((r,e)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:b=j,...h}=r;(a||a===0)&&!c(a)&&console.error(R(`${a}`,"Progress"));const s=c(a)?a:d;o!==null&&!m(o,s)&&console.error(w(`${o}`,"Progress"));const t=m(o,s)?o:null,$=l(t)?b(t,s):void 0;return i.jsx(_,{scope:n,value:t,max:s,children:i.jsx(v.div,{"aria-valuemax":s,"aria-valuemin":0,"aria-valuenow":l(t)?t:void 0,"aria-valuetext":$,role:"progressbar","data-state":N(t,s),"data-value":t??void 0,"data-max":s,...h,ref:e})})});g.displayName=u;var x="ProgressIndicator",P=f.forwardRef((r,e)=>{const{__scopeProgress:n,...o}=r,a=E(x,n);return i.jsx(v.div,{"data-state":N(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:e})});P.displayName=x;function j(r,e){return`${Math.round(r/e*100)}%`}function N(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function l(r){return typeof r=="number"}function c(r){return l(r)&&!isNaN(r)&&r>0}function m(r,e){return l(r)&&!isNaN(r)&&r<=e&&r>=0}function R(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${d}\`.`}function w(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${d} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var C=g,M=P;function V({rootClassName:r,indicatorClassName:e,value:n,...o}){return i.jsx(C,{"data-slot":"progress",className:p("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",r),...o,children:i.jsx(M,{"data-slot":"progress-indicator",className:p("bg-primary h-full w-full flex-1 transition-all",e),style:{transform:`translateX(-${100-(n||0)}%)`}})})}V.__docgenInfo={description:"",methods:[],displayName:"Progress",props:{rootClassName:{required:!1,tsType:{name:"string"},description:""},indicatorClassName:{required:!1,tsType:{name:"string"},description:""}}};export{V as P};
