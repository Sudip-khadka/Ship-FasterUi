import{j as a}from"./jsx-runtime-D_zvdyIk.js";import{r as g}from"./index-2yJIXLcc.js";import{c as w,P as N}from"./index-Da90mRSO.js";import{c as f}from"./createLucideIcon-CZO7jHe9.js";var p="Progress",m=100,[T,L]=w(p),[$,I]=T(p),P=g.forwardRef((e,r)=>{const{__scopeProgress:o,value:t=null,max:s,getValueLabel:d=R,...n}=e;(s||s===0)&&!v(s)&&console.error(_(`${s}`,"Progress"));const l=v(s)?s:m;t!==null&&!x(t,l)&&console.error(q(`${t}`,"Progress"));const i=x(t,l)?t:null,b=u(i)?d(i,l):void 0;return a.jsx($,{scope:o,value:i,max:l,children:a.jsx(N.div,{"aria-valuemax":l,"aria-valuemin":0,"aria-valuenow":u(i)?i:void 0,"aria-valuetext":b,role:"progressbar","data-state":j(i,l),"data-value":i??void 0,"data-max":l,...n,ref:r})})});P.displayName=p;var h="ProgressIndicator",y=g.forwardRef((e,r)=>{const{__scopeProgress:o,...t}=e,s=I(h,o);return a.jsx(N.div,{"data-state":j(s.value,s.max),"data-value":s.value??void 0,"data-max":s.max,...t,ref:r})});y.displayName=h;function R(e,r){return`${Math.round(e/r*100)}%`}function j(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function u(e){return typeof e=="number"}function v(e){return u(e)&&!isNaN(e)&&e>0}function x(e,r){return u(e)&&!isNaN(e)&&e<=r&&e>=0}function _(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${m}\`.`}function q(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${m} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var V=P,C=y;function c({rootClassName:e,indicatorClassName:r,value:o,...t}){return a.jsx(V,{"data-slot":"progress",className:f("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",e),...t,children:a.jsx(C,{"data-slot":"progress-indicator",className:f("bg-primary h-full w-full flex-1 transition-all",r),style:{transform:`translateX(-${100-(o||0)}%)`}})})}c.__docgenInfo={description:"",methods:[],displayName:"Progress",props:{rootClassName:{required:!1,tsType:{name:"string"},description:""},indicatorClassName:{required:!1,tsType:{name:"string"},description:""}}};function E({className:e="",rootClassName:r="",position:o="top",label:t,description:s,icon:d,progress:n,indicatorClassName:l=""}){return a.jsxs("div",{className:"flex flex-col gap-2 "+e,children:[a.jsxs("div",{className:"topComp text-secondary-900 font-medium text-[1rem] flex justify-between w-full",children:[t&&a.jsx("p",{className:"line-clamp-1 overflow-hidden max-w-[400px]",children:t}),o==="top"&&a.jsxs("p",{children:[n," %"]})]}),a.jsx("div",{className:"centerComp flex items-center gap-2 w-full",children:o==="center"?a.jsxs("div",{className:"wrapper flex items-center justify-between w-full gap-3",children:[a.jsx(c,{value:n,rootClassName:r,indicatorClassName:l}),a.jsxs("p",{children:[n,"%"]})]}):a.jsx(c,{value:n,rootClassName:r,indicatorClassName:l})}),a.jsxs("div",{className:`descriptionComp flex items-center ${o==="top"?"justify-between ":""}`,children:[a.jsxs("div",{className:`description-wrapper w-full flex items-center ${o==="top"?"justify-between ":" gap-2"}`,children:[a.jsx("p",{className:"text-secondary line-clamp-1 max-w-[400px]",children:s}),d&&d]}),o==="bottom"&&a.jsxs("p",{children:[n,"%"]})]})]})}E.__docgenInfo={description:"",methods:[],displayName:"ProgressBar",props:{progress:{required:!0,tsType:{name:"number"},description:""},description:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:""},position:{required:!1,tsType:{name:"union",raw:'"top" | "center" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"center"'},{name:"literal",value:'"bottom"'}]},description:"",defaultValue:{value:'"top"',computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},rootClassName:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},indicatorClassName:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},icon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};export{E as P,c as a};
